#!/usr/bin/env bash

## KNOWN ISSUE
#
# This code results in the signing key passphrase showing up in the build
# console. To this I say "fuck it." The process for hiding it was so broken
# and the security implications were minimal. I decided it was not worth the
# effort. At least it's not in source control.

set -ex

if [ -z "${SIGNING_KEY_FINGERPRINT}" ]; then
  echo "SIGNING_KEY_FINGERPRINT required"
  exit 1
fi

if [ -z "${SIGNING_KEY_PASSPHRASE}" ]; then
  echo "SIGNING_KEY_PASSPHRASE required"
  exit 1
fi

sudo apt-get -y update
sudo /usr/lib/pbuilder/pbuilder-satisfydepends --control control
sudo apt-get -y build-dep imagemagick

# Because of the quirks of `checkinstall` this needs to be in the exact location that it will
# be when it is installed for real.
sudo mkdir -p /opt/ImageMagick-6
sudo chown jenkins:jenkins /opt/ImageMagick-6

PACKAGE_VERSION=`dpkg-parsechangelog --show-field Version`
PACKAGE_VERSION_NO_EPOCH=$(echo $PACKAGE_VERSION | sed s/.*:// )

# Do the build
./configure --prefix=/opt/ImageMagick-6 && make

checkinstall -D --install=no --fstrans=no --pakdir "$PWD/.." \
   --pkgname imagemagick-et --backup=no --deldoc=yes --deldesc=yes --delspec=yes --default \
   --pkgversion "$PACKAGE_VERSION"

dpkg-sig \
  -k $SIGNING_KEY_FINGERPRINT \
  -g "--passphrase ${SIGNING_KEY_PASSPHRASE} --batch --no-use-agent" \
  --sign evertrue \
  "$PWD/../imagemagick-et_${PACKAGE_VERSION_NO_EPOCH}-1_amd64.deb"

# # Upload built artifacts to S3
/opt/rbenv/shims/deb-s3 upload \
  --arch amd64 \
  --sign $SIGNING_KEY_FINGERPRINT \
  --gpg-options "--passphrase ${SIGNING_KEY_PASSPHRASE} --batch --no-use-agent" \
  --prefix debian-repo \
  --bucket ops.evertrue.com \
  "$PWD/../imagemagick-et_${PACKAGE_VERSION_NO_EPOCH}-1_amd64.deb"

sudo rm -rf /opt/ImageMagick-6
rm -f "$PWD/../imagemagick-et_${PACKAGE_VERSION_NO_EPOCH}-1_amd64.deb"
